# Name must match the class name in __init__.py
tool: XilinxImplementTool
namespace: implement 

# Dictionary containing all properties/attributes required by the tool
properties:
  verilog_version:
    description: "Determines whether or not vivado is actually run (otherwise template rendered and that's it)"
    default: "sv"
    schema: "enum('default', 'sv')"
  execute:
    description: "Determines whether or not vivado is actually run (otherwise template rendered and that's it)"
    default: true
    schema: "bool()"
  part:
    description: "The FPGA part number that the software should target"
    default: null 
    schema: "str()"
  verilog:
    description: "List of verilog files to be included (read in the order given)"
    default: [] 
    schema: "list(file())"
  vhdl:
    description: "List of vhdl files to be included (read in the order given)"
    default: [] 
    schema: "list(file())"
  xdc:
    description: "List of xdc files to be included (read in the order given)"
    default: [] 
    schema: "list(file())"
  ports:
    description: "List of port objects"
    default: [] 
    schema: "list(include('port'))"
  clocks:
    description: "List of clocks for generating clock timing constraints"
    default: [] 
    schema: "list(include('clock'))"
  config:
    description: "Configuration settings for FPGA"
    default: {mode: "B_SCAN", bank_voltage_select: "GND", voltage: 1.8}
    schema: "include('cfg')"
  units:
    description: "Define units for all variables"
    default: {time: "ns", capacitance: "pF", current: "mA", voltage: "V", power: "mW", resistance: "ohm", altitude: "meters"}
    schema: "include('units')"
schema_includes:
  port:
    name: "str()"
    iostandard: "enum('LVCMOS18', 'LVDS')"
    package_pin: "str()"
    clock: "bool(required=False)"
    buffer_type: "str(required=False)"
    #drive: "str()"
    #slew: "str()"
  cfg:
    mode: "str()"
    bank_voltage_select: "enum('VCCO', 'GND')"
    voltage: "num(min=0.0)"
  clock:
    name: "str()"
    period: "num(min=0.0)"
    type: "enum('port', 'pin', 'net')"
  units:
    time: "enum('us', 'ns', 'ps')"
    capacitance: "str()"
    current: "str()"
    voltage: "str()"
    power: "str()"
    resistance: "str()"
    altitude: "str()"
